@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

AddElementTag("async", $fontColor="black")
AddRelTag("async", $textColor="black", $lineColor="black", $lineStyle = DashedLine())

skinparam wrapWidth 180
LAYOUT_WITH_LEGEND()
LAYOUT_TOP_DOWN()

Container(balancer, "Балансировщик нагрузки", "NGINX")

System_Boundary(server_sys, "Сервер") {
    Component(api, "API-сервис", "FastAPI", "Обрабатывает входящие HTTP-запросы от клиента")
    Component(indexation, "Индексация RAG", "Сервис", "Индексация файлов")
    Component(generation, "Генерация RAG", "Сервис", "Формирование ответа для пользователя")
    Component(file_storage, "Файловое хранилище", "Файловая система", "Сбор и хранение файлов пользователей")
    Component(db_client, "CRUD", "SQLAlchemy", "Доступ к базе данных")
}

System_Ext(llm_api, "Большая языковая модель", "Обрабатывает части пайплайна RAG")

ContainerDb(db, "База данных", "PostgreSQL", "Чанки, данные о пользователях, метаданные о файлах")

Rel_Down(balancer, api, "HTTP-запросы", $tags="async")
Rel_Left(api, indexation, "Вызывает при загрузке файлов", $tags="async")
Rel(api, db_client, "Получение/хранение JWT-токенов", $tags="async")
Rel_Down(api, generation, "Вызывает при запросе ответа", $tags="async")
Rel_Down(api, file_storage, "Сохраняет файлы", $tags="async")
Rel(indexation, db_client, "Сохраняет чанки", $tags="async")
Rel_L(generation, db_client, "Поиск чанков для ответа", $tags="async")
Rel_Down(generation, llm_api, "Запросы к модели", $tags="async")
Rel(db_client, db, "Запросы к базе", $tags="async")

SHOW_LEGEND()
@enduml
