@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

AddElementTag("async", $fontColor="black")
AddRelTag("async", $textColor="black", $lineColor="black", $lineStyle = DashedLine())

skinparam wrapWidth 250
LAYOUT_WITH_LEGEND()
LAYOUT_TOP_DOWN()

System_Ext(balancer, "Балансировщик нагрузки")

System_Boundary(server_sys, "Сервер") {
    Component(api, "API-сервис", "FastAPI", "Обрабатывает HTTP-запросы от клиентов и координирует работу сервисов")
    Component(indexation, "Индексация RAG", "Сервис", "Обрабатывает и индексирует документы для последующего поиска")
    Component(generation, "Генерация RAG", "Сервис", "Формирует ответы на пользовательские запросы на основе извлечённой информации")
    Component(file_storage, "Файловое хранилище", "Файловая система", "Хранит загруженные пользователями документы")
    Component(db_client, "CRUD", "SQLAlchemy", "Интерфейс для взаимодействия с базой данных")
}

System_Ext(llm_api, "Большая языковая модель", "Обрабатывает входящие промпты и возвращает ответы")

ContainerDb(db, "База данных", "PostgreSQL", "Хранит текстовые чанки, их векторные представления, метаданные файлов и данные пользователей")

Rel_Down(balancer, api, "HTTP-запросы", $tags="async")
Rel_Left(api, indexation, "Запускает при загрузке файла", $tags="async")
Rel(api, db_client, "Получение/хранение JWT-токенов", $tags="async")
Rel_Down(api, generation, "Запрос на генерацию ответа", $tags="async")
Rel_Down(api, file_storage, "Сохраняет файлы", $tags="async")
Rel(indexation, db_client, "Сохраняет чанки", $tags="async")
Rel_L(generation, db_client, "Извлекает релевантные чанки", $tags="async")
Rel_Down(generation, llm_api, "Запросы к модели", $tags="async")
Rel(db_client, db, "Чтение и запись данных", $tags="async")

SHOW_LEGEND()
@enduml
