name: Educ application

on:
    push:
        branches: ['master']
    pull_request:
        branches: ['master']

env:
    COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

jobs:
    test:
        runs-on: self-hosted

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v5
              with:
                  version: '0.7.2'

            - name: Enable caching
              uses: astral-sh/setup-uv@v5
              with:
                  enable-cache: true

            - name: Install the project
              run: uv sync --locked --all-extras --dev

            - name: Run tests with coverage
              run: uv run pytest --cov=server --cov-report=term --cov-report=xml

            - name: Upload coverage to Coveralls
              uses: coverallsapp/github-action@v2

    build:
        runs-on: self-hosted

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Stop previous containers
              run: docker compose -f ./docker/compose.prod.yml down

            - name: Build and run
              env:
                  LLM_API_KEY: ${{secrets.LLM_API_KEY}}
                  JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
                  DEFAULT_ADMIN_EMAIL: ${{secrets.DEFAULT_ADMIN_EMAIL}}
                  DEFAULT_ADMIN_PASSWORD: ${{secrets.DEFAULT_ADMIN_PASSWORD}}
                  SQLALCHEMY_URL: ${{secrets.SQLALCHEMY_URL}}
                  SIGN_SECRET_KEY: ${{secrets.SIGN_SECRET_KEY}}
                  POSTGRES_DB: ${{secrets.POSTGRES_DB}}
                  POSTGRES_USER: ${{secrets.POSTGRES_USER}}
                  POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
              run: |
                  echo "LLM_API_KEY=$LLM_API_KEY" >> ./docker/.env
                  echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> ./docker/.env
                  echo "DEFAULT_ADMIN_EMAIL=$DEFAULT_ADMIN_EMAIL" >> ./docker/.env
                  echo "DEFAULT_ADMIN_PASSWORD=$DEFAULT_ADMIN_PASSWORD" >> ./docker/.env
                  echo "SQLALCHEMY_URL=$SQLALCHEMY_URL" >> ./docker/.env
                  echo "SIGN_SECRET_KEY=$SIGN_SECRET_KEY" >> ./docker/.env
                  echo "POSTGRES_DB=$POSTGRES_DB" >> ./docker/.env
                  echo "POSTGRES_USER=$POSTGRES_USER" >> ./docker/.env
                  echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> ./docker/.env
                  docker compose -f ./docker/compose.prod.yml up -d --build

            - name: Clean up .env file
              run: rm ./docker/.env
