[project]
name = "educ"
version = "0.1.0"
description = "Description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiofiles>=24.1.0",
    "asyncpg>=0.30.0",
    "bcrypt>=4.3.0",
    "fastapi>=0.115.8",
    "huggingface-hub>=0.30.2",
    "langchain>=0.3.19",
    "langchain-community>=0.3.18",
    "langchain-huggingface>=0.1.2",
    "langchain-openai>=0.3.7",
    "loguru>=0.7.3",
    "openai>=1.63.2",
    "pgvector>=0.4.0",
    "pre-commit>=4.2.0",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.7.1",
    "pydantic[email]>=2.10.6",
    "pyjwt>=2.10.1",
    "pylint>=3.3.6",
    "pymupdf>=1.25.4",
    "pypdf2>=3.0.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.20",
    "smolagents>=1.9.2",
    "sqlalchemy[asyncio]>=2.0.38",
    "testcontainers>=4.10.0",
    "torch>=2.6.0",
    "typer>=0.15.2",
    "types-aiofiles>=24.1.0.20250326",
    "types-pyyaml>=6.0.12.20250402",
    "uvicorn>=0.34.0",
    "vllm>=0.8.3",
]

[tool.pytest.ini_options]
testpaths = "server/tests/test_completions"
pythonpath = "."
addopts = "-v --tb=short --capture=no"
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "ruff>=0.11.8",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "A",   # builtins (shadowing)
    "C90", # mccabe complexity
    "PD",  # pydantic
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "N818",   # exception name should be suffixed with "Error"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
